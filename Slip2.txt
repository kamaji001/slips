Q.1 Write a Java Program to implement Singleton pattern for multithreading. 

class LazySingletonObject
{
    private static LazySingletonObject  ins;
     private LazySingletonObject()
    {
        System.out.println("Example of Lazy Singleton");
    }
    public static synchronized LazySingletonObject getins()
    {
        if(ins==null)
        {
            ins=new LazySingletonObject();
         }
        return ins;
     }
}
public class LazySingleton
{
    public static void main(String args[])
    {
        Thread t1=new Thread(()->
        {
            LazySingletonObject o1=LazySingletonObject.getins();
            System.out.println("Instance1");
        });

         Thread t2=new Thread(()->
        {
            LazySingletonObject o2=LazySingletonObject.getins();
            System.out.println("Instance2"); 
        });

        t1.start();
        t2.start();
    }
} 

Q.2 Write a python program to implement simple Linear Regression for predicting house 
price.

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model 

#df=pd.read_excel("./position.xlsx")
df = pd.read_excel("./position.xlsx", names=["Level", "Salary"])

print("first five details\n")
print(df.head())
plt.xlabel("Level")
plt.ylabel("Salary")

lr=linear_model.LinearRegression()
lr.fit(df[["Level"]],df.Salary)
print("Prediction at 15:")
print(lr.predict([[15]]))

print("coeficent " )
print(lr.coef_)
print("\nintercept")
print(lr.intercept_)

plt.scatter(df.Level, df.Salary,color="red")
plt.plot(df.Level, lr.predict(df[["Level"]]),color="red")
plt.show()


Q.3 Create a simple React component called Counter that displays a number and has two 
buttons: "Increment" and "Decrement." The number should start at 0 and change 
when the buttons are clicked.
a. Use state to manage the number.
b. Pass the initial number as a prop to the Counter component.

import React from 'react';
import Counter from './Counter.js'; // Make sure to adjust the path based on your file structure

const App = () => {
  return (
    <div>
      <h1>Slip 1</h1>
      <Counter initialNumber={0} />
    </div>
  );
};
                    
export default App;


Counter.js
import React, { useState } from 'react';

const Counter = ({ initialNumber }) => {
  const [count, setCount] = useState(initialNumber || 0);

  const handleIncrement = () => {
    setCount(count + 1);
  };

  const handleDecrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};
 
export default Counter;